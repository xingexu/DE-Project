version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: transit_rewards_db
    environment:
      POSTGRES_DB: transit_rewards
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - transit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build: .
    container_name: transit_rewards_backend
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: transit_rewards
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: development_jwt_secret_key_2024
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - transit_network
    command: npm run dev

  # pgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: transit_rewards_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@transit.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - transit_network

volumes:
  postgres_data:

networks:
  transit_network:
    driver: bridge

